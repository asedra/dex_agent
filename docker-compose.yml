services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: dexagents-postgres-dev
    environment:
      - POSTGRES_DB=dexagents
      - POSTGRES_USER=dexagents
      - POSTGRES_PASSWORD=dexagents_dev_password
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - dexagents-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dexagents -d dexagents"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dexagents-backend-dev
    ports:
      - "8080:8000"
    environment:
      # API Settings
      - API_V1_STR=/api/v1
      - PROJECT_NAME=DexAgents - Windows PowerShell Agent
      - VERSION=1.0.0
      
      # Security
      - SECRET_KEY=dev-secret-key-change-in-production
      
      # Database
      - DATABASE_URL=postgresql://dexagents:dexagents_dev_password@postgres:5432/dexagents
      
      # CORS Origins
      - BACKEND_CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000
      
      # PowerShell Settings
      - DEFAULT_TIMEOUT=30
      - MAX_TIMEOUT=300
      
      # Agent Settings
      - AGENT_INSTALLER_PATH=agent_installers
      - TEMP_DIR=temp
      
      # Development
      - PYTHONPATH=/app
      - ENVIRONMENT=development
    volumes:
      # Source code for development
      - ./backend:/app
      # Persistent data
      - backend_data:/app/data
      - backend_logs:/app/logs
      - backend_temp:/app/temp
      - backend_installers:/app/agent_installers
    networks:
      - dexagents-network
    depends_on:
      postgres:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/system/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: dexagents-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      # Next.js settings
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      
      # API Configuration
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_API_TOKEN=your-secret-key-here
      - BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_INTERNAL_API_URL=http://backend:8000
      
      # WebSocket Configuration
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080
      
      # Application Settings
      - NEXT_PUBLIC_APP_NAME=DexAgents
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - NEXT_PUBLIC_APP_DESCRIPTION=Windows Endpoint Management Platform
      
      # Feature Flags
      - NEXT_PUBLIC_ENABLE_DARK_MODE=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=false
      - NEXT_PUBLIC_ENABLE_DEBUG=true
    networks:
      - dexagents-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

networks:
  dexagents-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  backend_data:
    driver: local
  backend_logs:
    driver: local
  backend_temp:
    driver: local
  backend_installers:
    driver: local