version: '3.8'

services:
  # Backend Service - Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dexagents-backend-prod
    ports:
      - "8080:8000"
    environment:
      # API Settings
      - API_V1_STR=/api/v1
      - PROJECT_NAME=DexAgents - Windows PowerShell Agent
      - VERSION=1.0.0
      
      # Security - Use strong secret key in production
      - SECRET_KEY=${SECRET_KEY:-please-change-this-secret-key-in-production}
      
      # Database
      - DATABASE_URL=dexagents.db
      
      # CORS Origins - Restrict in production
      - BACKEND_CORS_ORIGINS=${BACKEND_CORS_ORIGINS:-http://localhost:3000}
      
      # PowerShell Settings
      - DEFAULT_TIMEOUT=30
      - MAX_TIMEOUT=300
      
      # Agent Settings
      - AGENT_INSTALLER_PATH=agent_installers
      - TEMP_DIR=temp
      
      # Production
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      # Persistent data only (no source code mounting)
      - backend_data_prod:/app/data
      - backend_logs_prod:/app/logs
      - backend_temp_prod:/app/temp
      - backend_installers_prod:/app/agent_installers
      # Database persistence
      - backend_db_prod:/app
    networks:
      - dexagents-prod-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/system/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Frontend Service - Production
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: runner
    container_name: dexagents-frontend-prod
    ports:
      - "3000:3000"
    environment:
      # Next.js settings
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      
      # API Configuration
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8080}
      - NEXT_PUBLIC_API_TOKEN=${NEXT_PUBLIC_API_TOKEN:-default_token}
      
      # WebSocket Configuration
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL:-ws://localhost:8080}
      
      # Application Settings
      - NEXT_PUBLIC_APP_NAME=DexAgents
      - NEXT_PUBLIC_APP_VERSION=1.0.0
      - NEXT_PUBLIC_APP_DESCRIPTION=Windows Endpoint Management Platform
      
      # Feature Flags - Production settings
      - NEXT_PUBLIC_ENABLE_DARK_MODE=true
      - NEXT_PUBLIC_ENABLE_ANALYTICS=${NEXT_PUBLIC_ENABLE_ANALYTICS:-false}
      - NEXT_PUBLIC_ENABLE_DEBUG=false
      
      # Security headers
      - HOSTNAME=0.0.0.0
      - PORT=3000
    networks:
      - dexagents-prod-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # Nginx Reverse Proxy (Optional - for production load balancing)
  nginx:
    image: nginx:alpine
    container_name: dexagents-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs_prod:/var/log/nginx
    networks:
      - dexagents-prod-network
    depends_on:
      - frontend
      - backend
    restart: always

networks:
  dexagents-prod-network:
    driver: bridge

volumes:
  backend_data_prod:
    driver: local
  backend_logs_prod:
    driver: local
  backend_temp_prod:
    driver: local
  backend_installers_prod:
    driver: local
  backend_db_prod:
    driver: local
  nginx_logs_prod:
    driver: local