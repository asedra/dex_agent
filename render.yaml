# Render.com Deployment Configuration
# DexAgents - Windows PowerShell Agent Platform

services:
  # Backend API Service (Python/FastAPI)
  - type: web
    name: dexagents-backend
    runtime: python3
    plan: starter
    region: oregon
    rootDir: backend
    buildCommand: pip install --upgrade pip && pip install -r requirements.txt
    startCommand: python start.py
    healthCheckPath: /api/v1/system/health
    autoDeploy: true
    envVars:
      - key: API_V1_STR
        value: "/api/v1"
      - key: PROJECT_NAME
        value: "DexAgents - Windows PowerShell Agent"
      - key: VERSION
        value: "1.0.0"
      - key: DATABASE_URL
        value: "dexagents.db"
      - key: DEFAULT_TIMEOUT
        value: "30"
      - key: MAX_TIMEOUT
        value: "300"
      - key: AGENT_INSTALLER_PATH
        value: "agent_installers"
      - key: TEMP_DIR
        value: "temp"
      - key: PYTHONPATH
        value: "/opt/render/project/src"
      - key: ENVIRONMENT
        value: "production"
      - key: PORT
        value: "10000"
      - key: SECRET_KEY
        generateValue: true
      - key: BACKEND_CORS_ORIGINS
        fromService:
          type: web
          name: dexagents-frontend
          property: host

  # Frontend Service (Next.js)
  - type: web
    name: dexagents-frontend
    runtime: node
    plan: starter
    region: oregon
    rootDir: frontend
    buildCommand: npm ci && npm run build
    startCommand: npm run start:render
    healthCheckPath: /api/health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: "production"
      - key: PORT
        value: "10000"
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: dexagents-backend
          property: host

databases:
  # SQLite is handled as a file in the backend service
  # For production, consider upgrading to PostgreSQL:
  # - name: dexagents-postgres
  #   plan: starter
  #   databaseName: dexagents
  #   user: dexagents_user